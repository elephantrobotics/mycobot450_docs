{"./":{"url":"./","title":"Introduction","keywords":"","body":"myCobot Pro 450 全谐波协作机械臂入门首选 核心文档 本文档包含从产品简介、详细的技术参数到用户须知和产品开发指导的全面信息。文档将深入介绍myCobot Pro 450机械臂的基础功能，并提供软件开发指南，展示成功的应用案例，帮助您了解如何将myCobot Pro 450有效整合进各种应用中。此外，我们还提供了丰富的支持与服务信息，确保您在遇到任何技术挑战时能够获得必要的帮助。 文档说明 根据您的需求以及myCobot Pro 450应用程序开发的专业水平，您可以选择从头到尾遵循该顺序进行阅读，或将其用作独立参考。您可以随时使用左侧的侧边栏导航跳转到本文档的任何部分，全文共分为以下五大板块： 产品信息 产品信息板块将为您提供机械臂的基本概述，包括主要功能、产品参数和电气特性等详细的技术规格，帮助您快速了解产品的基本特性和使用环境。此外，这一部分将详细介绍产品的应用实例和支持的扩展开发，为您提供必要的开发指南和资源。文末将给出相关购买链接和渠道，方便您进行购买。 基础设置 本章节是使用本产品的每一位用户必须仔细阅读的重要部分。它涵盖了关于产品使用、运输、储存及维护的关键须知，旨在确保用户在操作产品时的安全性和效率。此外，本章节也详细说明了因未遵循这些指南而可能导致的产品故障或损害的责任划分。 功能与应用 功能与应用板块详细介绍了机械臂的基础功能和软件使用方法，包括myBlockly使用说明和系统与固件更新。软件开发指南提供了基于不同开发环境的指导，如Python和ROS2，支持技术开发者进行应用扩展。通过展示成功的应用案例和提供配套资源，为您提供实践参考和必要的支持材料，以便更深入地了解和使用产品。 支持与服务 支持与服务板块将为您提供全面的故障排除指南和购买后的服务信息，如保修和服务条款，帮助您在遇到问题时能够快速解决，并确保您了解购买后的权利和义务。此外，'关于我们'部分加强了用户对myCobot 系列产品设计及制造商的了解，旨在建立信任和品牌忠诚。 致谢 我们非常感谢您花时间阅读myCobot Pro 450 用户手册。我们希望本文档能够帮助您更好地了解并有效使用这款机器人，从而激发您的创造力。如果您有任何疑问或需要进一步帮助，请随时联系我们的客户支持团队。我们期待看到您使用 myCobot Pro 450完成创新项目，并欢迎您加入我们快速发展的开发者社区。 文档目录 下一章 → "},"1-ProductInformation/1-ProductIntroduction/1-ProductIntroduction.html":{"url":"1-ProductInformation/1-ProductIntroduction/1-ProductIntroduction.html","title":"1 产品介绍","keywords":"","body":"产品简介 1. 产品概述 myCobot Pro 450 全谐波协作机械臂入门首选 1.1 产品简介 myCobot Pro 450 是一款面向教育教学、科学实验、商业展示及轻工业自动化场景的小型化全谐波6轴协作机械臂。其核心功能丰富多样，具备精准的操作能力，工作半径可达 450 毫米，有效负载为 1 公斤，重复定位精度高达 ±0.1 毫米，能够出色完成各类轻负载且对精度要求高的任务。 在控制方面，它依托内置工业级核心控制板和自研控制系统，可便捷连接电脑、平板、手机等终端设备。预装的拖拽式编程软件与快速调试接口，让零基础用户也能轻松上手操作。同时，工具端的集成化接口设计消除了连接夹爪时的线缆困扰，底座新增的 CAN、RS485 接口为二次开发和功能拓展提供了广阔空间。其核心价值在于为不同领域的用户提供了一款高性能、易操作且扩展性强的协作机械臂解决方案，助力提升工作效率与创新能力。 1.2 设计理念 设计 myCobot Pro 450 的初衷，是为了满足日益增长的多样化应用需求。在教育领域，期望帮助学生更直观地接触和学习机器人技术，培养实践操作能力和创新思维；在科研场景中，为科研人员提供稳定、精准的实验操作工具，加速科研进程；在商业展示方面，打造具有吸引力的互动体验装置，提升展示效果。 1.3 设计目标 设计目标 描述 应用场景及特点 满足多样化高精度操作需求 450mm 工作半径覆盖标准台面，1kg 负载支持多末端执行器，±0.1mm 重复定位精度控偏差。 - 教育科研场景：可用于实验数据采集，其高精度能保证数据的准确性和可靠性；- 轻工业自动化场景：可进行精细物料处理，如电子元件的安装、分拣等工作，提升生产效率与产品质量 降低使用门槛与技术壁垒 多终端连接，预装拖拽编程软件，4 种工业级连接及多标准协议，零基础易上手。 - 教育教学场景：学生可轻松通过终端设备连接并操作机械臂，借助编程软件学习机器人编程知识，提升实践能力；- 商业场景：企业人员无需复杂的技术培训，就能利用该机械臂进行方案预研与验证，降低技术使用成本。 促进创新应用与拓展 接入多模态及具身智能大模型，配视觉与 语音控制，提供 4 套开箱方案，接口支持二次开发。 - 科研场景：研究人员能基于大模型和具身智能能力，开展机器人智能决策、自主运动策略等前沿课题研究；- 商业展示场景：利用多模态交互和独特应用方案，打造新颖的互动展示体验，吸引客户关注，提升品牌形象。 1.4 产品特点 产品特点 特点描述 超长待机 实验室验证寿命 > 10,000小时 (注：实际工况可能影响)，持久稳定，教学科研更省心。 商用级安全关节 集成谐波减速器 + 伺服电机 + 关节刹车 + 控制器，断电瞬间自锁，安全可靠，人机协作更安心。 一体精工，坚固可靠 全金属一体化高温压铸机身，结构强度统一，内置控制器，告别外置电箱与复杂线缆，简洁高效。 万“物”互联 支持 4 种工业级连接 (WLAN/EtherNet/RS485/CAN)，协议丰富 (Socket-TCP/Modbus/CANOpen)，轻松融入现有系统，工业4.0接入无忧。 精准高效，轻量之选 工作半径： 450mm, 负载： 1kg, 精度： ±0.1mm, 自重： 零门槛操控 myCobot Pro 跨平台控制中心 - 浏览器直连 (输入IP即可)，无需安装！集成：Blockly图形化编程 & 拖动示教：小白秒变编程高手。快捷移动控制 & 状态监控。支持 Modbus/VNC/Socket 等多连接配置。一站式固件升级与管理。 开源生态，无限可能 提供完整 URDF 模型，开放关节电机底层接口 (位置/速度/加速度/电流等状态可查)，助力运动学/动力学仿真建模 (ROS2, Isaac Sim, MuJoCo)。开放90+ 标准控制接口库 (Python & C++)，覆盖状态查询、关节/笛卡尔空间运动控制，开发者友好，高效赋能二次开发。 大模型“灵魂”注入 支持接入多模态大模型 (如 DeepSeek、ChatGPT)，实现语音指令 + 视觉识别的智能抓取，交互更直观。支持接入具身智能大模型 (如 Lerobot)，赋能机器人自主运动策略学习与部署，探索智能体前沿。 炫酷应用套件 提供 3 套开箱即用方案 - 3D视觉无序分拣、高精度写字绘画、移动复合机器人，快速搭建教学/实验/展示场景。 2. 产品应用 2.1 用户群体 教育工作者与学员 适用于高等院校、职业院校的机器人工程、人工智能、自动化控制、机电一体化等专业的课程教学、实验实训与技能竞赛，为师生提供从理论到实践的理想平台。 科研人员与开发者 面向科研院所、企业研发部门及广大机器人爱好者，提供稳定的硬件平台和深度的软件开放接口，助力算法验证、原型开发与前沿技术探索。 商业与工业用户 适用于商业展厅的产品互动展示、轻工业环境中的小批量精密生产、样品分选、质量检测等任务，提供高效、可靠的自动化解决方案。 2.2 应用场景 用户群体 核心应用场景（开箱即用） 扩展应用场景 (无限可能) 教育领域的教师和学生 - 机器人基础教学：机械结构、运动学、轨迹规划原理实验。- 拖动示教编程：手工工艺模仿、动作录制与复现。- 图形化编程入门：使用Blockly进行逻辑思维与编程基础训练。 - 高级算法开发：基于Python/C++/ROS 2进行机器视觉、路径规划、力控等算法研究。- 人工智能集成：开发语音控制、智能视觉识别抓取等AI综合应用项目。 创客和技术开发者 - 快速原型验证 (PoC)：验证自动化流程或抓取方案的可行性。- 高精度仿真：提供精准URDF模型，无缝对接Isaac Sim, MuJoCo等仿真环境。 - 前沿领域探索：作为实体平台，用于具身智能、强化学习、人机协作等前沿课题研究。- 复合系统开发：与AGV/AMR移动底盘集成，构建移动操作(Mobile Manipulation)机器人。 商业演示和轻工业 - 自动化商业展示：实现7x24小时自动化产品展示、与观众进行趣味交互。- 精密作业：高精度写字画画、电路板点位检测、样品分选。- 3D视觉分拣：结合3D相机实现杂乱环境下的无序工件抓取与分拣。 - 产线自动化集成：通过Modbus/TCP/IP等协议与PLC通信，集成入小型产线执行上下料、精密装配等任务。- 实验室自动化：替代人工执行重复性实验操作，如样品移液、培养皿搬运。 3. 支持的扩展开发 mycobot 系列机械臂在教育和科研领域中极具价值，特别是在 Python 和 ROS（Robot Operating System)这两个广泛使用的开发环境中。这些环境提供了强大的支持，使得 mycobot 系列产品能够广泛应用于机器学习、人工智能研究、复杂运动控制以及视觉处理任务中。同时搭配自适应夹爪、摄像头法兰、吸泵等数十种配件，可以尽情发挥myCobot的创意想法。 Python 机器人支持Python，具备完善的Python API库。 可通过Python控制机器人的关节角度、坐标、夹持器等。 ROS 支持 ROS2 版本，提供 RVIZ2 仿真环境支持。允许用户实时显示机械臂和采集机械臂的状态信息，使得myCobot Pro 450适合 ROS 初学者和教育用途。 硬件接口 包括 IO、USB 等，方便连接各种传感器和执行器。 软件库 提供丰富的开源库和 API 来简化开发过程。 系统兼容性 兼容 Windows、Linux、MacOS，适应多种开发环境。 C++ 使用c++语言，您可以通过我们公司开发的c++动态库，进行自由开发（坐标控制、角度控制、io控制、夹爪控制等），控制我们公司已经研发出来的部分机器人。 myBlockly 既是图形化编程软件又是可视化工具。 用户可以拖拽模块创建程序，这个过程非常类似于搭积木，方便快捷易上手。 4. 购买地址 如果您有兴趣购买该设备，请点击下面的链接：淘宝：https://shop504055678.taobao.comShopify：https://shop.elephantrobotics.com/速卖通：https://elephantrobotics.aliexpress.com/store/1101941423 ← 上一章 | 下一章 → "},"1-ProductInformation/2-ProductFeature/2-ProductFeature.html":{"url":"1-ProductInformation/2-ProductFeature/2-ProductFeature.html","title":"2 产品特性","keywords":"","body":"机器人参数说明 第一章中，我们探讨了产品的卖点及其设计理念，为您提供了对产品高层次理解的全景视角。现在，让我们进入第二章——机器人参数说明。这一章节将是您理解产品技术细节的关键。详细了解这些技术参数，不仅可以帮助您充分认识到我们产品的先进性和实用性，而且还能够确保您能够更有效地利用这些技术来满足您的具体需求。 1. 机器人规格参数 指标 参数 名称 全谐波协作机械臂 型号 myCobot Pro 450 自由度 6 有效负载 1 Kg 工作半径 450mm 重复定位精度 ±0.1mm 重量 电源输入 24V，9.2A 工作温度 0-45℃ 通信 TCP/IP-SocketMODBUSEthernet IP 2. 控制核心参数 2.1 主控制器规格表 2.2 辅助控制器规格表 3. 结构尺寸参数 ！本章以毫米为距离单位，以度为角度单位。 3.1 产品尺寸和工作空间 3.2 关节运动范围 关节 范围 J1 -360 ~ +360 J2 -135 ~ +135 J3 -135 ~ +135 J4 -150 ~ +150 J5 -360 ~ +360 J6 -360 ~ +360 3.3 孔位安装 机器人底座安装法兰，底座同时兼容乐高科技件安装方式和M4螺丝安装方式。 机器人末端安装法兰，机械臂末端同时兼容乐高科技件孔与螺丝螺纹孔。 4. 电气特性参数 5. 笛卡尔坐标参数 ← 上一章 | 下一章 → "},"2-BasicSettings/3-UserNotes/":{"url":"2-BasicSettings/3-UserNotes/","title":"3 用户须知","keywords":"","body":"用户须知 本节对本产品的每个用户都至关重要，必须仔细阅读。它包括有关产品使用、运输、储存和维护的基本信息，以确保运行期间的安全和效率。此外，它还概述了因不遵守这些准则而导致产品故障或损坏的责任。用户须知》分为几个小节，每个小节针对不同的主题提供详细的指导： 章节摘要 3.1-安全须知包括责任、安全警告标志、一般安全规则、个人安全和应急措施。 3.2-运输和储存 说明包装、运输和长期储存要求以及责任。 3.3-维护和保养提供日常维护指导，以延长产品使用寿命。 3.4-常见问题解决提供快速解决常见问题的导航指南。 通过全面阅读本节内容，用户可以更好地了解如何安全有效地使用产品，最大限度地提高性能和使用寿命。 如果您已经阅读了本章的所有内容，请继续阅读下一章。 ← 上一章 | 下一章 → "},"2-BasicSettings/3-UserNotes/3.1-SafetyInstruction.html":{"url":"2-BasicSettings/3-UserNotes/3.1-SafetyInstruction.html","title":"3.1 安全须知","keywords":"","body":"安全须知 1. 简介 本章详细介绍了有关对大象机器人执行安装、维护和维修工作的人员的常规安全信息。请在搬运、安装和使用前，先充分阅读和理解本章节的内容与注意事项。 2. 危险识别 协作机器人的安全性建立在正确配置和使用机器人的前提上。并且，即使遵守所有的安全指示，操作者所造成的伤害或损伤依然有可能发生。因此，了解机器人使用的安全隐患是非常重要的，有利于防患于未然。 以下表 1-1~3 是使用机器人的情境下可能存在的常见安全隐患 ∶ 表 1-1 危险级安全隐患 1 机器人搬运过程中的错误操作导致的人身伤害或者机器人损伤。 2 未按要求固定机器人，例如螺钉缺少或螺钉未上紧、底座锁付能力不足以稳定支撑机器人进行高速运动等造成机器人倾倒，导致人身伤害或者机器人损伤。 3 未进行机器人的正确安全功能配置，或者少安装了安全防护工具等，造成机器人安全功能未能发挥作用，从而引起危险。 表 1-2 警告级安全隐患 1 调试程序时请勿在机器人运动范围内逗留，不合适的安全配置可能无法避免可能造成人身伤害的碰撞。 2 机器人与其他设备连接可能引发新的危险，需要重新进行全面的风险评估。 3 因工作环境中的其他设备或者机器人末端执行器等尖锐表面造成刮伤、刺伤。 4 机器人是精密机械，踩踏可能造成机器人损伤。 5 夹持不到位或关闭机器人电源、气源前（未确定末端执行器是否牢固夹持物因为失去动力而掉下）未将夹持的物体取下，可能会引起危险，例如末端执行器损坏、人被砸伤等。 6 机器人存在意外移动的风险，在任何情况下，切勿站在机器人任何轴的下方！ 7 机器人是精密机械，搬运时不能平稳放置可能会引起振动，可能会引起机器人内部部件的损伤。 8 机器人与普通机械设备相比自由度更多、运动范围更大，不满足运动范围可能会引起意外的碰撞。 表 1-3 有可能导致触电的安全隐患 1 使用非原装电缆可能会引发未知危险。 2 用电设备接触液体可能导致漏电危险。 3 电气连接错误时可能存在触电隐患。 4 请务必在关闭控制器与相关装置电源并拔出电源插头之后进行更换作业。如果在通电的状态下进行作业，则可能会导致触电或故障。 3. 安全注意事项 使用机械臂时应遵循如下安全规则： 机械臂属于带电设备，非专业人士不得随意更改线路，否则容易给设备或者人身带来伤害。 操作机械臂时，应当严格遵守当地的法规和规范，手册中所描述的安全注意事项及描述的“危险”、 “警告”和“注意”事项仅作为当地安全规范的补充。 请在规定环境范围内使用机械臂，超出机械臂规格及负载条件会缩短产品的使用寿命甚至损坏设备。 负责安装、操作、维护 myCobot 机械臂的人员必须先经过严格培训，了解各种安全注意事项，掌握 正确的操作和维护方法之后，才能操作和维护机器人。 请勿长时间在潮湿环境下使用本产品。本产品为精密电子元器件，长时间潮湿环境工作会损坏设备。 请勿在高温环境下使用本设备。本设备外表面是由光敏树脂为原料制造而成，较高的温度会损坏设备的外壳，导致设备故障。 高腐蚀性清洁不适用于机械臂的清洁，阳极氧化的部件不适用于浸没清洁。 请勿在未安装底座时使用本产品以避免损伤本设备或意外发生，本产品应在固定且周围无障碍物的环境下使用。 请勿使用其他电源适配器供电。如因使用不符合标准的适配器导致设备损坏将不在售后服务内。 请勿拆解，拆开，拧开机械臂的螺丝或外壳等。如若拆开，则无法提供保修服务。 未经专业培训人员不得擅自维修故障产品，不得擅自拆卸机械臂，若产品出现故障，请及时联系 myCobot 技术支持工程师。 若该产品报废，请遵守相关法律正确处理工业废料，保护环境。 儿童使用过程中必须有人在旁边监控，运行完成时及时关闭设备。 机器人在运动过程中，请勿将手伸入机械臂运动范围，当心碰伤。 严禁更改或者去除和修改机械臂以及相关设备的铭牌、说明、图标和标记。 搬运、安装过程中请务必小心，应按包装箱上的提示注意轻放、按箭头方向正确放置机器人，否则容易损坏机器。 请勿擅自烧录其他产品驱动、或使用非官方推荐方式烧录固件。如因用户个人烧录其他固件导致设备损坏将不在售后服务内。 如果您对本手册的内容有任何疑问或建议，请登录大象机器人官方网站提交相关信息： https://www.elephantrobotics.com 请勿将机械臂用于以下用途： 医疗与生命攸关的应用中。 可能会引起爆炸的环境中。 未经过风险评估直接使用。 安全功能等级不够的使用。 不符合的机器人性能参数的使用。 ← 上一章 | 下一章 → "},"2-BasicSettings/3-UserNotes/3.2-TransportandStorage.html":{"url":"2-BasicSettings/3-UserNotes/3.2-TransportandStorage.html","title":"3.2 运输和储存","keywords":"","body":"运输和储存 装箱打包   在机器人产品进行装箱打包时，请确保使用专为其设计的包装材料和箱体，这些材料能够提供足够的缓冲和支撑，防止运输过程中的撞击和震动。务必检查所有零部件是否已正确固定，避免松动导致损坏。对于易碎或敏感部件，应额外使用防震保护材料进行加固。最后，确保包装箱外标有清晰的搬运和警告标签，指示正确的搬运方式和存放方向。 物流运输   在运输过程中，应使用原始包装运输机器人产品。在运输过程中，应确保机器人产品在包装箱内作为一个整体是稳定的，并通过适当的措施加以保护。在运输和长期储存过程中，环境温度应保持在-20 至+55°C 的范围内，湿度 ≤95%且无凝露。   由于机器人是精密机械，从包装中取出机器人产品时，应小心处理。在运输过程中，如果不能稳定放置，可能会引起振动并损坏机器人的内部部件。 设备储藏   运输完成后，原包装应妥善存放在干燥的地方，环境温度应保持在-20 至+55°C 的范围内，湿度 ≤95%且无凝露，以备将来重新包装和运输需要。不要将其他物品堆放到机械臂的原包装箱上，防止包装箱变形和机械臂损坏。 | ← 上一章 | 下一章 → "},"2-BasicSettings/3-UserNotes/3.3-MaintenanceandCare.html":{"url":"2-BasicSettings/3-UserNotes/3.3-MaintenanceandCare.html","title":"3.3 维护和保养","keywords":"","body":"维护和保养 作为一家机器人制造商，我们重视确保客户能够正确、安全地维护和升级他们的机器人设备。为此，我们提供以下详细的维护和保养指南，包括常见维护项目及维修或升级硬件的部分，请您认真阅读: 1. 常见维护项目及推荐周期 维护项目 描述 推荐周期 视觉检查 检查机器人有无明显的损坏、异物堆积或磨损。 日常 结构清洁 使用干净、干燥的布料清洁机器人结构部件。避免水分和侵蚀性清洁剂。 日常 紧固件检查 检查并紧固所有螺栓和连接件。 日常 润滑 对关节和移动部件进行润滑，使用制造商推荐的润滑油。 每 3 个月 电缆和接线检查 检查电缆和接线，确保无损坏或磨损。 每月 电气连接检查 确保所有电气连接牢固，无腐蚀或损坏。 每月 软件更新 检查并更新控制软件和应用程序。 每次有更新时 软件数据备份 定期备份关键软件配置和数据。 每季度 固件更新 定期检查并更新固件，以获取最新的功能和安全补丁。 每次有更新时 传感器和器件检查 检查传感器和其他关键器件，确保正常工作。 每月 紧急停止功能测试 定期测试紧急停止功能，确保其可靠性。 每月 环境条件监控 监控工作环境的温度、湿度、灰尘等，确保符合机器人的操作规格。 持续监控 安全配置复查 定期检查和确认机器人的安全配置，如限速和工作范围设定。 每月 预防性维护计划执行 按制造商的维护计划执行定期检查和维护。 按制造商指南 2. 独立更改机器人硬件的指南 我们理解客户可能会有自行升级或维修机器人硬件的需求。在进行任何升级操作之前，请务必详细阅读产品的相关参数，并与我们的官方人员确认是否被允许进行此类操作。未经官方允许的操作可能导致产品故障，且不在保修范围内。 物料要求 官方制造或推荐的物料：所有维修和升级所需的配件和组件必须是由我们官方制造或明确推荐的。这包括但不限于电子组件、传感器、电机、连接件和任何其他可更换部件。 物料获取：客户可通过我们的官方渠道购买所需的维修和升级物料。这确保了配件的质量和兼容性。 维修或升级流程 客户自行维修：客户应负责完成维修工作。我们将提供详细的维修指导和手册，以指导客户完成维修步骤。 遵循官方指导：维修操作应严格遵循我们提供的官方指导。任何偏离官方指导的操作都可能导致设备损坏。 责任和保修政策 责任划分：制造商：提供维修和升级的官方指导、官方制造或推荐的物料，并处理由制造缺陷导致的问题。 客户：负责按照官方指导完成维修，使用官方配件。 保修政策： 保修有效：只有当维修操作完全遵循我们的指导，且使用官方配件时，保修才有效。 保修无效：若客户未按官方指导操作，或使用非官方配件进行维修或升级，导致的任何损坏都将不在保修范围内。 注意事项 安全第一：在进行任何维修或升级操作前，请确保遵循所有安全指南，包括断电和使用适当的防护装备。 技术支持：如在维修过程中遇到问题，建议停止操作并联系我们的技术支持团队寻求帮助。 我们强烈建议客户严格遵循这些指南，以确保机器人设备的安全、有效运行。不当的维修操作可能导致设备损坏并影响保修状态。如需进一步的指导或支持，请及时联系我们的专业技术团队。 ← 上一章| 下一章 → "},"2-BasicSettings/3-UserNotes/3.4-FAQs.html":{"url":"2-BasicSettings/3-UserNotes/3.4-FAQs.html","title":"3.4 常见问题解决","keywords":"","body":"常见问题 本部分列出了一些常见问题，涵盖硬件、软件这几个方面。 1 软件问题 2 硬件问题 3 其他 ← 上一章 | 下一章 → "},"2-BasicSettings/3-UserNotes/3.4.1-software.html":{"url":"2-BasicSettings/3-UserNotes/3.4.1-software.html","title":"3.4.1 软件","keywords":"","body":"软件问题 1. mystudio相关 Q：关于mystudio下载固件的细节 一般情况下，出厂已经内置固件，除非在机器异常情况，否则无需重新刷固件 下载固件的过程中需要连接网络 选择对应机型的固件，不要选错其他机型 2. Python相关 Q：运行提示缺少库文件Q:遇到报错信息：ModuleNotFoundError: No module named “pymycobot”，如何处理？ A1：没有安装pymycobot，对应的解决方法是重新安装pymycobot，指令是pip3 install pymycobot --upgrade --user A2: 在安装python的过程中没有勾选下图的“Add Pythonxx to PATH”，需要卸载python后重新安装python，并将此选项勾选。 A3: 建议使用3.9版本的pyhton，pyhton12会出现不兼容的情况。 Q：send_coords(coords, speed, mode)中的mode有没有通俗一点的解释？ A：线性1代表机械臂末端以直线的方式抵达目标位置，如果因为限位、结构等原因无法走直线，那指令就不会完全执行； 线性0表示末端以任意姿态抵达目标位置，由于没有直线的限制，不容易出现指令不执行的现象。 Q：set_fresh_mode(mode) 的插补和刷新模式有什么区别？ A: 插补0是指起始点和终止点之间规划了很多密集的点位，从而达到控制中间段轨迹的效果。 如何达到程序并行的效果：非插补1就是没有中间段的规划，控制不了轨迹，但是运动会相对平滑。 Q：在仅改变Z轴的情况下，轨迹不是直上直下的，但是最后落点是只改了Z轴，这个正常吗，如何确保中间轨迹也是直线？ 开插补走直线就能确保轨迹了set_fresh_mode(0) # 开插补 send_coords(coords, speed, mode=1) # 走直线 注意一定要开插补之后，在send_coords设置的智能规划路线才有用。 插补是指起始点和终止点之间规划了很多密集的点位，从而达到控制中间段轨迹的效果。 非插补就是没有中间段的规划，控制不了轨迹。 Q:识别到的目标位置，末端无法到达，怎么判断这个坐标是否可以到达然后处理？ A：solve inv kinematics(target coords, current_angles)用这个接口看是否有解就可以了。 solve_inv_kinematics(target_coords, current_angles) 功能 : 将坐标转为角度。 参数： target_coords: list 所有坐标的浮点列表。 current_angles: list 所有角度的浮点列表，机械臂当前角度 返回值: list 所有角度的浮点列表。 3. ROS相关 Q：有没有配置好环境的虚拟机镜像？ A：我们有提供一个配置好ROS2环境且内置ROS源码的虚拟机环境，用户可以通过下面这个链接下载，并将虚拟机文件导入VirtualBox，省去自己配置环境的麻烦，当测试ROS案例时建议使用我们已经配置好的虚拟机环境进行验证，避免由于环境配置的原因导致的一些案例运行报错 请参考虚拟机文件导入虚拟机软件的操作步骤视频：https://drive.google.com/file/d/1KeYk_CUgDE46rVn7zbd0EhraIbgt3qZt/view?usp=sharing ROS2虚拟机文件下载 虚拟机软件VirtualBox下载 Q：导入ROS2虚拟机文件的时候报错怎么处理？ A: 这是因为虚拟机软件Oracle VM VirtualBox版本过低导致的，需更新虚拟机软件版本。 Q：如何重新下载ROS源码包？ A：使用指令拉取： git clone https://github.com/elephantrobotics/mycobot_ros2.git 或着手动下载，下载方法进入到ROS源码包地址按照下图进行操作，源码包地址：https://github.com/elephantrobotics/mycobot_ros2 Q: 运行ROS moveit案例发现报错ImprotError：No module named yaml咋办？ A：在这个脚本开头第一行，把Python解释器改为python3 Q：运行虚拟机找不到串口怎么处理？ A:使用USB线将M5机械臂与PC连接，打开虚拟机设置→USB设备→添加USB设备→选择串口号QinHeng xxxxx，这个就是机器的串口设备。 如果没有这个设备号，可以通过重新拔插设备获取对应的USB设备号，拔插有串口变化的即对应的机器串口设备号 Q：终端切换到~/catkin_ws/src中使用git安装并更新mycobot_ros时，出现目标路径\"mycobot_ros2\"已经存在，原因是什么？ A：说明~/catkin_ws/src中已经存在一个mycobot_ros2程序包，需要提前将其删掉，再重新执行git操作即可。 Q：rosrun运行时，终端报错显示counld not open port /dev/ttyUSB0：Permission: '/dev/ttyUSB0'，是为什么？ A：串口权限不够，终端输入sudo chmod 777 /dev/ttyUSB0赋予权限。 Q：rosrun运行时，终端提示Unable to register with master node [http://localhost:11311]: master may not be running yet. Will keep trying的原因是？ A：运行ros程序前，需开启ros节点，终端输入roscore。 Q：rosrun运行时，终端报错显示counld not open port /dev/ttyUSB0：No such file or directory: '/dev/ttyUSB1'，是为什么？ A：串口有误。需确认当前机械臂的实际串口。可通过ls /dev/tty*查看。 Q：刚克隆下来的mycobot_ros2程序包，然后直接运行rosrun程序，出现package 'mycobot_pro_450' not found的错误或者找不到该文件之类的错误？ A：刚克隆下来的mycobot_ros2需要构建代码进行ros环境编译。终端输入 cd ~/catkin_ws/ catkin_make source devel/setup.bash Q：编译完成后，新开终端运行launch指令时，为什么会出现下面的错误？ A1：系统没有添加ros环境变量，所以每次开启新终端都要source： cd ~/catkin_ws/ source devel/setup.bash A2：系统添加ros环境变量，每次开启新终端后无需执行source： # noetic为Ubuntu20.04系统 echo \"source /opt/ros/noetic/setup.bash\" >> ~/.bashrc source ~/.bashrc A3：可能是指令中的文件名与实际中mycobot_ros2包里面的文件名不一致，请仔细检查指令是否有误。 5 C++相关 Q：找不到各种dll文件怎么处理？ A1：如果myCobotCpp.dll缺失，将之前放到lib目录下的myCobotCpp.dl放到mycobotcppexample.exe所在目录下. A2: 如果报缺少QT5Core.dll，打开qt command (菜单栏搜索QT) ，选择msvc2017 64-bit，执行windeployqt--release myCobotCppExample.exe所在目录(如: windeployqt --release D:lvs2019myCobotCpploutlbuildlx64-Releaselbin) 此处执行命令后如果报找不到vs安装路径，请检查vs环境变量的设置. 以上步骤执行后，如果报缺少qt5serialport.dll文件，将gt安装目录处的此文件(路径如: D:lgt5.12.1015.12.10msvc2017 64bin)，拷贝到myCobotCppExample.exe所在目录 Q：生成myCobotCppExample.exe可执行文件，这个有可能是什么问题？ 选择下图中的启动 ← 上一章 | 下一章 → "},"2-BasicSettings/3-UserNotes/3.4.2-hardware.html":{"url":"2-BasicSettings/3-UserNotes/3.4.2-hardware.html","title":"3.4.2 硬件","keywords":"","body":"硬件问题 Q：机械臂上电锁不住如何解决？ 检查是否有接上原装电源适配器，或者适配器是否接触良好，可以尝试重新拔插电源适配器 检查关节在断电状态，能否正常转动，会不会出现阻力过大或者过小的情况，初步判断是否内部结构物理断裂，无物理断裂则接着往下检查. Q：按下急停后，释放急停锁不住了，怎么让机械臂再次锁住？ 需要给机器重新上电，例如以myblockly给机器上电 Q: 关节抖动、关节角度偏差过大或关节无力下坠如何优化？ 参考机器人参数介绍章节，检查实际负载是否在机械臂有效负载范围内，负载过大会导致关节抖动，可适当减轻实际关节的负载 将运动模式更改成刷新模式，这样会机械臂的运行轨迹会相对平滑，具体的API，请参考 set_fresh_mode(1) 查看以下链接内容调整pid：https://drive.google.com/file/d/1UWhaaSTuwLFImuEGY1J2tvgxTQDwWxK_/view?usp=sharing 查看gitbook第5章节，对机械臂进行零位校准，也可参考下面链接的校准步骤：https://drive.google.com/file/d/1XtKH-ykKWPH0q9Z_YHwzkgwNKRhstHhi/view?usp=sharing 使用时间较长的机器(3个月以上)可能会出现关节老化产生关节间隙的情况，可按照以下视频，手动掰动关节，查看是否存在关节虚位：https://drive.google.com/file/d/1tXDUALmfw1z0u6lM9uH5hOHivjbRoWxW/view?usp=sharing 如果存在关节老化虚位问题，这种抖动则属于机器自然老化无法避免。 Q: 什么是关节零位点？ 以下图为例，关节与关节外壳边缘之前会设计有一个拱形槽，这个就是关节零位点 一般校准后零点姿态如下： Q：有没有零位校准的方法？ 请参考gitbook第5章节或者下面这个链接： https://drive.google.com/file/d/1XtKH-ykKWPH0q9Z_YHwzkgwNKRhstHhi/view?usp=sharing Q: myCobot的关节的限位？ A: 一轴和五轴有限位，一轴顺时针约165°左右，逆时针165°左右。五轴可时针、逆时针可转动约165° 注意：转动机械臂时应小角度、轻轻地转动，到达限位后就不可用力继续转动。 Q：不同版本的机械臂支持什么通信接口？ A：基于微处理器的机械臂支持socket通信TCP；基于微控制器的机械臂可以USB转串口通信。 ← 上一章 | 下一章 → "},"2-BasicSettings/3-UserNotes/3.4.3-other.html":{"url":"2-BasicSettings/3-UserNotes/3.4.3-other.html","title":"3.4.3 其他","keywords":"","body":"其他 Q：机器异常时如何重置成出厂设置？ 恢复成出厂设置主要在于镜像、pid及零位的重置。以下为重置方案： 关于重置镜像：重置镜像时将清空原系统中的所有内容，如有重要文件，请注意提前保存，重置镜像的方法参考gitbook系统使用章节 关于重置pid：一般情况下当机器出现关节严重抖动，关节动作速度异常，关节蜷缩在一起的情况下可重置pid，重置方法参考：https://drive.google.com/file/d/1UWhaaSTuwLFImuEGY1J2tvgxTQDwWxK_/view?usp=sharing 关于重置零位：一般情况下当机器出现零位不正确，关节限位异常可重新零位校准，重置方法参考：https://drive.google.com/file/d/1XtKH-ykKWPH0q9Z_YHwzkgwNKRhstHhi/view?usp=sharing Q：urdf文件下载路径在哪里？ A：请参考以下路径，所有mycobot机型的urdf都在此路径中：https://github.com/elephantrobotics/mycobot_ros/tree/noetic/mycobot_description/urdf Q：通过串口或socket通讯，经过机器人的控制器控制电机，指令传输延时多大？有通讯时序图吗？实时性如何？ 这边没有串口或socket通讯的延时测试数据，据我们这边开发使用反馈来看，实时性还是挺高的，不会出现很滞后的情况 Q：mycobot pro 450 机械臂基座标系是怎么样的？ Q：450的关节是串口总线的控制方式吗？ A:是的 Q: 关于坐标的理解有更多的解释吗？ A：控制坐标运动的API是send_coords([x,y,z,rx,ry,rz], speed) x、y、z 坐标： 控制了机械臂末端执行器在空间中的位置。改变这些坐标值将使机械臂移动到不同的空间位置，从而实现在三维空间中的定位。 rx、ry、rz 姿态角度： 控制了机械臂末端执行器的姿态或朝向。这些值通常以欧拉角的形式给出，描述了机械臂末端执行器相对于基坐标系的旋转，欧拉角顺序是zyx。改变这些值将使机械臂的末端执行器旋转到不同的角度或方向。 例如： 当你调整 +X 时，这表示在当前机械臂末端执行器的位置沿着当前末端执行器的 X 轴正方向移动一定的距离。这个动作会导致机械臂整体向某个方向移动。而当你调整 RX 时，这表示在当前机械臂末端执行器的姿态绕当前末端执行器的 X 轴旋转一定的角度。这个动作会导致机械臂整体发生旋转，末端执行器的方向会发生改变。 综合来看，+X 和 RX 的调整都会直接影响机械臂的运动状态，+X 控制位置的移动，而 RX 控制姿态的变化。 如果你更直观的看到变化，我们建议你使用myblockly的串口控制工具，单次调整一个参数，观察其在坐标系中的变化，请注意在观察rx、ry、rz 的时候如果想更加直观，请注意调整J1关节为0的时候调整x，ry，在关节为90时，调整y和rx 你可以参考下文的坐标系图示： Q: 关于DH参数的Offset 有更多的解释吗？Offset 是绕z旋转吗? A:DH参数描述了机械臂中相邻连杆之间的几何和运动关系。 在DH参数表中，Offset参数表示前一个连杆绕其z轴旋转对下一个连杆位置的影响，即连接两个连杆时的偏移量。对于机械臂中的Offset参数，一般表示上一个连杆绕自己的z轴旋转对下一个连杆位置的影响，而不是绕下一个连杆的z轴旋转。因此Offset不是绕z旋转，而是表示连接两个连杆时的位移。 Q: 450机械臂供电的电压区间范围是多少?瞬间电流有多大? A: 24V ，9.2A Q：请问如果对各轴舵机进行角度控制和反馈获取，最短的通讯周期可以做到多少？ A：这个需要根据速度决定间隔时间，最低响应时间是50ms Q：mycobot系列机器有碰撞检测吗？ A：带算法碰撞自干涉，已经集成到设置关节角度及坐标的API里了 Q:vnc拖拽卡顿怎么处理？ A: 如果是由于在vnc中拖动任何窗口造成的卡顿断连，可以按照下面的图片做一些配置，选项需要与下面的图片一致。成功设置后，将解决由于拖动窗口导致VNC断开的问题。 Q：更换450的第2个关节，发现4颗螺丝滑丝了怎么拆出来？ 关于关节的替换问题，那4个螺丝可以不必拆卸，请拆卸中间那颗大螺丝，然后将J2关节主体固定回去，然后用力将整个连轴件一并抽取出来即可，具体操作我为你录制了一个视频，你可以参考 Q:关节扭矩信息提供吗？ A:我们的机器都只提供整体关节的整体信息，不提供舵机、电机执行单元的内部扭矩、电压电流等参数信息，公开的是机械臂整体参数，如重复定位精度，电源电压等等 Q:下图中的查看看两坐标之间的关系怎么理解？ A: 指的是如果你想查看名为 \"turtle1\" 的坐标系相对于名为 \"turtle2\" 的坐标系的变换关系，可以使用这个指令，通俗一点来说就是当你运行这个命令时，它会告诉你一个物体（\"turtle1\"）相对于另一个物体（\"turtle2\"）的位置和方向信息。就像在地图上你可以知道一个城市相对于另一个城市的位置一样 Q:ROS2的环境被不小心改动，我可以直接删掉ROS，自己重新安装吗？ A:关于ROS重新安装这个问题，我们不建议用户自己重新安装，因为ROS环境的搭建会相对复杂，容易出错，如果需要重置ROS环镜，我们建议用户重新刷写系统镜像，具体方法请参考 基于ROS开发使用 Q：主机如何将文件传输到虚拟机中 A:按下图设置共享文件夹，可以将PC中的文件传输到虚拟机中 Q:同一个位置，机械臂到位以后，重复定位偏差过大怎么解决？ 新旧机器都可以通过调pid，尽可能减少偏差， 附：https://docs.qq.com/doc/DU0VhT2JNVUdNUEJS，https://drive.google.com/file/d/1UWhaaSTuwLFImuEGY1J2tvgxTQDwWxK_/view?usp=sharing 但是旧版机器因为机械臂的2、4关节存在齿轮间隙，容易在重力的作用下产生关节偏差，最终影响末端精度，这四组关节值中2、4关节的受力不一致，所以精度也不太一样。目前建议通过程序进行调整，当机器到达点位后，可以在此点位再读一次点位，检查如果存在偏差，在此基础上再单关节调整具体偏差值，以达到到达指定点位的效果。 Q:API和串口指令直接控制关节有什么区别？ API 提供了简化、抽象化的接口，使开发更高效和容易，适合快速开发和集成。 串口指令 提供了直接、底层的控制，适合需要精细调整或开发自定义功能的场景，但通常开发和调试更复杂。 总得来说： 使用串口指令直接控制机械臂更加灵活，但也更加复杂，需要对通信协议有深入的了解；而使用API控制更加简单方便，但可能会受限于API提供的功能和性能。 Q:windows运行git指令报错 A:这是没有安装git导致的，需要先安装了git，再使用git指令 Q：MDI和JOG的区别是什么？ A: MDI（Manual Data Input）称为设定值直接给定运行方式。即上位控制器直接设 置目标位置、速度、加减速度后，轴自动移动到目标位置的定位方式。MDI 也是 实际应用中最常使用的一种定位功能。 JOG朝某一方向连续移动。 Q:各个机型pymycobot的最新支持版本是什么？ Q: DH表 如何区分标准和改进 sdh，std，标准 mdh，modify，改进 我们提供的是标准DH表，客户如果需要可以自己去转化，只是两种不同的描述方式。 Q:报错缺少opencv_camera,如何处理？ A:报错是显示缺少可执行权限，可能需要添加权限 改为用mycobot_280的，不需要用pi本身的了，因为m5那边占用有文件了，两边不能同时占有，否则会造成后面的编译失败。 Q:数据传输速度怎么看？ A：使用以下代码： import time from pymycobot.mycobot import MyCobot mc = MyCobot(\"COM8\",115200, debug = True) while 1: mc.get_angles() write表示下发的获取指令，read是返回的消息，左侧是时间。这里显示518write +611read，表示约100ms完成了一次get_angles的读取，频率是10hz。 Q:机械臂某一关节无法运动，如何处理？ A:可以通过python脚本，循环读角度，然后手动的去转动该关节，看角度有没有变化。 如果有返回值排查以下几点，蒋信息返回给技术支持人员。 1、get_servo_status查看J2舵机有没有欠压/过压等硬件问题 2、手动转动J2看有没有明显阻力，对比其它关节；单独给J2上使能focus_servo(2) 3、脚本，查看参数有没有问题。 Q：末端零位异常 A:长时间使用自适应夹爪夹取物品后会出现夹爪和末端零位异常的现象，需要将夹爪静止。 Q：什么的是正向运动学和逆向运动学？ A：正向运动学（Forward Kinematics）是指已知机器人各个关节的角度（或位移），求解机器人末端执行器（如机械臂的手爪）在笛卡尔空间中的位置和姿态。get_coords()的API中实现了，但是具体的算法不公开。 逆运动学（Inverse Kinematics）与正向运动学相反，它是指已知机器人末端执行器在笛卡尔空间中的位置和姿态，求解机器人各个关节的角度（或位移）write_coords()、send_coords() ← 上一章 | 下一章 → "},"2-BasicSettings/4-FirstInstallAndUse/":{"url":"2-BasicSettings/4-FirstInstallAndUse/","title":"4 首次安装","keywords":"","body":"首次安装和使用 感谢您选择我们的产品 在开始之前，我们衷心感谢您选择我们的产品。我们致力于为您提供卓越的用户体验。 首次使用和问题处理 本章将详细介绍产品收到后的初步使用方法，并提供解决问题的相关信息，确保您在使用过程中无后顾之忧。 跳转到各部分 4.1 产品标准清单 4.2 产品开箱指南 4.3 开机检测指南 ← 上一章 | 下一章 → "},"2-BasicSettings/4-FirstInstallAndUse/4.1-ProductStandardList.html":{"url":"2-BasicSettings/4-FirstInstallAndUse/4.1-ProductStandardList.html","title":"4.1 产品标准清单","keywords":"","body":"产品标准清单 1. 产品列表图片 感谢您选择大象机器人myCobot pro 450 机械臂，本章节内容旨在帮助您轻松上手大象机器人产品，享受产品带来的每一个精彩瞬间。 2. 产品标准清单对照表 序列号 产品 1 myCobot机械臂（型号myCobot pro 450） 2 myCobot机械臂-产品画册 3 myCobot机械臂-配套电源 4 USB-Type C 5 跳线 6 M4*35，杯头内六角，全螺纹，不锈钢螺丝 7 内六角扳手 注： 包装箱到位后，请确认机器人包装完好无损。如有损坏，请及时联系物流公司和您所在地区的供应商。开箱后，请根据物品清单检查箱内的实际物品。 ← 上一章 | 下一章 → "},"2-BasicSettings/4-FirstInstallAndUse/4.2-ProductUnboxingGuide.html":{"url":"2-BasicSettings/4-FirstInstallAndUse/4.2-ProductUnboxingGuide.html","title":"4.2 产品开箱指南","keywords":"","body":"产品开箱指南 1. 产品开箱图文引导 为什么需要按照步骤拆卸产品 在本节中，我们强烈建议按照指定步骤拆卸产品。这不仅有助于确保产品在运输过程中不受损害，还能将意外故障的风险降至最低。请仔细阅读以下图解指南，以确保您的产品在开箱过程中的安全。 1 检查包装箱是否损坏。如有损坏或配件缺失，请及时联系物流公司和您所在地区的供应商。 2 打开包装盒，取出产品宣传册、海绵包装盖、myCobot 机器人手臂、配套电源、平板底座和附件包。 3 确保每一步都完成后再进行下一步，以防止不必要的损坏或遗漏。 注: 取出产品后，请仔细检查每件物品的外观。请对照物品清单检查包装箱中的实际物品。 2. 产品开箱视频引导 ← 上一章 | 下一章 → "},"2-BasicSettings/4-FirstInstallAndUse/4.3-PowerOnDetectionGuide.html":{"url":"2-BasicSettings/4-FirstInstallAndUse/4.3-PowerOnDetectionGuide.html","title":"4.3 开机检测指南","keywords":"","body":"开机检测指南 1. 首次使用自查-机器关节功能验 注意: 在机械臂启动时，请注意不要让机械臂处于蜷缩或者关节之间触碰的姿态，建议启动时,机械臂姿态应如下图1所示，图2、图3均为错误启动姿态： 图1 (正确姿态) 图2（错误姿态） 图3（错误姿态） 2. 结构安装和固定 在 机械臂 的运动过程中，如果不将 myCobot 的底面与桌面或其他底面相连，仍然会造成 myCobot 的 摇晃或倾覆。 安装机械臂 安装M6X16螺丝将底板固定在台面上 安装完成的效果图 将机械臂底座放置到固定好的底板上 拆卸机械臂底座上的罩壳固定螺丝 打开机械臂底座的罩壳，并使用M6X16的螺丝将机械臂底座和底板固定 安装完成后，将机械臂底座的罩壳扣上 --> 安装机械臂底座的罩壳固定螺丝 安装机械臂底座的罩壳固定螺丝 注意：myCobot 底座的螺丝孔位连接 需要将机器人固定在牢固机座上才可以正常使用。机座重量要求：固定式机座，或移动式机座。 请确定固定底座上有对应螺纹孔位，再进行安装。 正式进行安装前，请确认： 待安装环境符合以上《工作环境与条件》表格的要求。 安装位置不小于机器人工作范围，且留有足够大的安装、使用、维护、维修的空间。 将机座放置到合适位置。 安装相关工具已准备好，如螺丝、扳手等。 确认以上内容后，请将机器人搬运至机座安装台面上，调整机器人位置，将机器人基座固定孔位与机座安装台面上的孔位对准。对准孔位后，将螺丝对准孔位，拧紧即可。 注意：在机座安装台面上调整机器人位置时，请尽量避免在机座安装台面上直接推拉机器人，以免产生划痕。人工移动机器人时请尽量避免对机器人本体脆弱部分施加外力，以免造成机器人不必要的损伤。 3. 关节控制方法步骤 1. 进行硬件连接 2. 进行软件环境安装与配置 3. 选择正确的通讯方式 4. USB通讯示例 4.1 机械臂关节运动myblockly源码 当你看到机械臂的关节1在0-90度循环运动3次效果，说明机械臂关节1响应正常，可尝试更改关节ID测试其他关节及循序渐进学习使用gitbook的其他案例或者利用机械臂做各种有趣的事情！ 指的一提的是，如果你目前对myblockly的代码块开发方式并不熟悉，还有一个相对快捷的关节验证方式是：使用myblockly快速移动工具进行简单的关节运动控制，具体用法请参考：myblockly快速移动工具使用 4.2 机械臂关节运动关节python源码 #运动效果为机械臂围绕零位姿态，1-6关节逐一运动±20度 import time from pymycobot.mycobot import MyCobot if __name__ == \"__main__\": cobot = MyCobot('com22',115200)#根据机型选择对应的端口号及波特率 cobot.set_fresh_mode(1) cobot.send_angles([0, 0, 0, 0, 0, 0], 20) time.sleep(2) print(\"start\") for i in range(1,7): cobot.send_angle(i, (-30), 20) time.sleep(2) cobot.send_angle(i, (30), 20) time.sleep(2) cobot.send_angle(i, (0), 20) time.sleep(2) 当你看到机械臂围绕零位姿态，1-6关节逐一运动±20度的运动效果，说明关节1-6响应正常，可循序渐进学习使用gitbook的其他案例或者利用机械臂做各种有趣的事情！ 如果执行案例没有看到相对应的效果，那么请参考下文的常见问题解决方案，另外请注意在联系技术支持人员前确保你已经检查了以下2点： 机械臂是否能在上电之后正常锁住？如果不能锁住，请参考FQA硬件相关问题：“Q：机械臂上电锁不住如何解决？”进行排查 运行代码是否有任何报错信息？ 请尽可能详细描述下使用细节，如果方便的话请提供一个操作视频，这将会有助于快速分析定位问题，提前感谢！ ← 上一章 | 下一章 → "},"3-FunctionsAndApplications/5-BasicApplication/":{"url":"3-FunctionsAndApplications/5-BasicApplication/","title":"5 基础功能","keywords":"","body":"基础功能 本章主要解释产品的基本功能用法和基本软件的使用。本章至关重要，应仔细阅读。在实际应用机器人之前，请确保正确理解所述操作。 5.1 myBlockly myBlockly 是一款完全可视化的模块化编程软件，是一种图形化编程语言。myBlockly 界面简洁，编程功能全面。它的可视化编程方法适合初次接触机器人产品的用户。 5.2 机器人控制端口 5.3 系统使用在使用系统之前，你需要掌握基本的 Linux 知识，如文件管理和命令行操作。在网络配置方面，要了解访问系统的远程连接方法（如 SSH）。闪存镜像时，选择正确的文件和工具，正确设置参数，确保系统正常运行。 5.4 固件更新 为了确保您的 mycobot pro 450 机器臂始终处于最佳状态，我们不断改进和更新固件。固件更新是确保设备功能、性能和安全性的关键步骤之一。通过及时更新固件，我们可以修复已知问题、改进功能、提高性能，并确保 mycobot pro 450 机器臂 的稳定性和安全性。 ← 上一章 | 下一章 → "},"3-FunctionsAndApplications/5-BasicApplication/5.1-5.1-myBlockly/":{"url":"3-FunctionsAndApplications/5-BasicApplication/5.1-5.1-myBlockly/","title":"5.1 myBlockly","keywords":"","body":"什么是 myBlockly？ myBlockly 是一款完全可视化的模块化编程软件，是一种图形化编程语言。 myBlockly 在功能/设计上类似于麻省理工学院的儿童编程语言 Scratch。 使用 myBlockly 时，用户可以通过拖动模块来构建代码逻辑。这个过程就像搭积木一样。 从用户的角度来看，myBlockly 是一个简单易用的可视化代码生成工具。从开发人员的角度来看，myBlockly 是一个文本框，其中包含用户输入的代码。 在文本框中生成代码的过程，就是用户在 myBlockly 中拖动代码的过程。 myBlockly 支持的操作系统如下： Windows macOS Linux arm64 跳转到各部分： 5.1.1 首次使用 mblockly 5.1.2 下载和卸载 5.1.3 接口描述 5.1.4 常见问题解答 ← 上一章 | 下一章 → "},"3-FunctionsAndApplications/5-BasicApplication/5.1-5.1-myBlockly/5.1.1-myBlocklyFirstUse.html":{"url":"3-FunctionsAndApplications/5-BasicApplication/5.1-5.1-myBlockly/5.1.1-myBlocklyFirstUse.html","title":"5.1.1 首次使用 mblockly","keywords":"","body":"使用 myBlockly 前的准备工作 在下载 myBlockly 之前，您需要配置 Python 环境。详情请参考以下操作方法。 环境配置。使用 myBlockly 之前，请确保已在计算机上配置好 Python 环境。 Raspberry Jetson Nano 版本自带 Ubuntu（V-20.04）系统和内置 Python 开发环境，因此无需构建和管理。 ← 上一章 | 下一章 → "},"3-FunctionsAndApplications/5-BasicApplication/5.1-5.1-myBlockly/5.1.2-install_uninstall.html":{"url":"3-FunctionsAndApplications/5-BasicApplication/5.1-5.1-myBlockly/5.1.2-install_uninstall.html","title":"5.1.2 下载和卸载","keywords":"","body":"下载并安装 myBlockly 下载 下载链接 官方网站地址 您需要根据操作系统下载不同的安装包。 不同的后缀代表不同的系统，请下载相应的版本： *.AppImage : Linux 系统 *.dmg : Mac 系统 *.exe : Window 系统 安装 为 Linux 安装 myblockly 从官方网站下载 Linux 版本的 myblockly，你会得到如下所示的安装包 选择 myblockly-arm64-latest.AppImage，右键单击打开它，单击 Properties 打开它 点击进入 Permissions 在 Permissions 页面，选中 Allow executing file as program，然后单击 Close 按钮关闭弹出窗口 关闭弹出窗口后，双击安装包 myblockly-arm64-latest.AppImage，打开 myblockly 用于 Windows 安装 双击打开名为 myblockly-arm64-latest.exe 的文件 点击 Run 点击 Install 后，等待 myblockly 安装完成 安装完成后，点击 Finish 按钮打开并运行 myblockly 为 MacOS 安装 myblockly 从官方网站下载 Mac 版 myblockly，获得如下所示的安装包。双击打开。 注意：对于 MacOS，安装前请确保系统 \"首选项->安全与隐私->常规\" 和 允许来自应用商店和公认开发者的应用程序 已启用。 卸载 对于 Linux，卸载 myblockly 直接删除安装包即可 安装包的默认名称是 myblockly-arm64-latest.AppImage 卸载 Mac 版 myblockly 只需将 myblockly 移至应用中的垃圾桶即可 在 Windows 中卸载 myblockly 进入 myblockly 的文件目录，点击运行 Uninstall myblockly.exe 点击 Uninstall myblockly 已卸载，单击 Finish 退出 更新 如果您想更新 myblockly，请访问 官方网站 下载最新版本。 ← 上一章 | 下一章 → "},"3-FunctionsAndApplications/5-BasicApplication/5.1-5.1-myBlockly/5.1.3-interface_description.html":{"url":"3-FunctionsAndApplications/5-BasicApplication/5.1-5.1-myBlockly/5.1.3-interface_description.html","title":"5.1.3 接口描述","keywords":"","body":"myBlockly 界面的显示和基本功能的使用 编号 图解说明 1 工具箱栏：点击特定类别，选择不同的构建模块 2 工作区：您可以将工具箱中的构件拖到工作区中使用 3 运行按钮：在工作区中运行代码 4 点击后将弹出以下菜单： - 保存：保存当前工作区 - 加载：加载已保存的工作区 - 设置：进入设置页面，您可以在此设置语言和主题。 5 点击后，控制面板将弹出。在面板中，您可以通过点击关节控制或坐标控制栏中的 \"+/-\"来快速控制机械臂的运动。6 点击后，您可以查看工作区中生成的 python 代码。7 将工作区居中。8 放大工作区。9 缩小工作区。 6 点击查看工作区生成的 python 代码 7 将工作区居中 8 放大工作区 9 缩小工作区域 10 垃圾桶：将工作区中的积木拖到此处可删除积木；同时点击垃圾桶可查看并恢复已删除的积木 使用控制面板 打开快速移动 连接机器 设定速度 您可以自定义每个运动方向的速度。 运动控制部分 - 前进按钮：单击此按钮可控制机器向前移动。 - 后退按钮：单击此按钮可控制机器后退。 - 后退按钮：单击此按钮可控制机器后退。 - 右移动按钮：单击此按钮可控制机器右移。 - 顺时针按钮：单击此按钮可控制机器顺时针移动。 - 逆时针按钮：单击此按钮可控制机器的逆时针运动。 - 运动停止按钮：单击此按钮可停止机器。 程序保存和加载 MyBlockly 的程序以 *.json 格式保存。点击界面右上角的蓝色方框。当出现 \"保存 \"选项时，点击它保存程序。 同时点击蓝色方框并点击 \"加载 \"选项，导入已保存的程序。 基本功能演示完成后，您可以在以下页面查看其他信息 here ← 上一章 | 下一章 → "},"3-FunctionsAndApplications/5-BasicApplication/5.1-5.1-myBlockly/5.1.4-Q&A.html":{"url":"3-FunctionsAndApplications/5-BasicApplication/5.1-5.1-myBlockly/5.1.4-Q&A.html","title":"5.1.4 常见问题解答","keywords":"","body":"Q&A 本章列出了使用 myBlockly 控制机械臂的常见问题，以供参考。 Q1：运行 myBlockly 时，出现错误信息 ModuleNotFoundError: No module named 'pymycobot' A: 这是因为在设置 Python 环境时没有安装 pymycobot 库。要安装 pymycobot 库，需要打开终端（Win 键 + R 键），输入 pip install pymycobot --upgrade --user点击回车键，即可看到 \"成功安装 pymycobot\"。 Q2：由于未添加 sleep 方法模块，机械臂没有响应 A: 操作机械臂的程序需要一定时间才能完成，因此在完成一个动作后，需要连接一个 sleep 模块，让机械臂在进行下一个动作前有足够的时间（所需时间取决于具体情况和机器，机械臂的默认设置是运行 myBlockly 时休眠时间最短不少于 0.5 秒），否则机械臂将无法实现理想的动作。 Q3：右上角的 Run 按钮无法点击，呈灰绿色。 A: 新版 myBlockly 增加了检测机械臂串行通信的功能。如果机械臂当前已与电脑连接，则需要进行检查： (1) 是否有后台程序占用机械臂的串行端口； (2) 右侧红色箭头下的工具栏是否关闭。如果打开，则需要手动关闭。 Q4：为什么运行程序后会出现大量错误？ A: 运行程序前，您需要确认一些信息： (1) 请确认机器人串行端口号和波特率正确无误。 如何检查串行端口号 在 Windows 系统中，找到设备管理器并检查端口。 如果端口（COM 和 LPT）显示 USB-Enhanced-SERIAL CH9102，则说明是 CP34X 芯片。如果端口（COM 和 LPT）显示 Silicon Labs CP210x USB 至 UART 桥接器，则表示该芯片为 CP210X。这两个名称对应的端口就是机械臂的串行端口。 打开 Linux 系统的终端，输入 ls/dev/tty* 并按 Enter。显示的就是机械臂的序列号。其中 AMA0 或 USB0 等就是机械臂的序列号。 在 Mac 系统上打开终端，输入 cd/dev/ 并按 Enter，然后运行 ls -al tty 查找，如 /dev/tty.usbserial-10。 (2) 请确认波特率是否正确。 (3) 请确认蓝色框中的型号、串行端口号和波特率与右侧小工具栏中的一致，并与机械臂相匹配。 Q5: 错误 MyCobot.int() 需要 2 个位置参数，但给出了 3 个。 A: 这个错误会出现在旧版本的 myBlockly 中，因为 myBlockly 和 pymycobot 的版本不兼容。只需更新 myBlockly 和 pymycobot 驱动程序库的版本即可。 Q6: 程序运行结果显示，子进程以代码 1 退出。 A: 这不是错误。所有程序运行后都会返回二进制数 1。这意味着所有程序都已成功运行。 ← 上一章 | 下一章 → "},"3-FunctionsAndApplications/5-BasicApplication/5.2-RobotControlPort.html":{"url":"3-FunctionsAndApplications/5-BasicApplication/5.2-RobotControlPort.html","title":"5.2 机器人控制端口","keywords":"","body":" ← 上一章 | 下一章 → "},"3-FunctionsAndApplications/5-BasicApplication/5.3-SystemUsageInstructions.html":{"url":"3-FunctionsAndApplications/5-BasicApplication/5.3-SystemUsageInstructions.html","title":"5.3 系统使用","keywords":"","body":"系统使用手册 1. 机器人系统介绍 系统 Ubuntu 是个人桌面操作系统中使用最广泛的 linux 操作系统。对于初学者来说，熟悉 linux 环境或一些嵌入式硬件操作系统是一个不错的选择。 功能介绍 myStudio：固件刻录软件，用于更新和刻录新固件。 myBlockly：图形化编程软件，可直接通过拖动构件形成运行代码，控制机械臂 ROS2 Shell：直接进入编译后的 ROS2 环境，可以直接输入相应指令，运行相应的 ROS2 代码 Github-ElephantRobotics：大象机器人官方开放源代码库 Home-ElephantRobotics：大象机器人网站 UserManual - CN/EN：机器人使用手册，包含有关机器人控制的所有内容 WiFi_ON/OFF：WiFi 开关，点击可打开/关闭 WiFi 功能 HotSpot_ON/OFF：热点开关，单击打开/关闭热点功能，热点名称为ElephantRobotics_AP_XXXX Language Support：系统语言设置，点击进入系统语言设置界面 2. 系统密码说明 账户密码、VNC 密码、SSH 密码、root 账户密码 密码：Elephant 如何更改密码 更改账户密码 使用快捷键 ctrl + alt + T 打开终端 输入 passwd 输入新密码两次 更改 vnc 密码 使用快捷键 ctrl + alt + T 打开终端 输入 vncpasswd 输入两次新密码 更改 ssh 密码 对于 SSH 远程连接，需要输入管理员账户的密码。无需单独更改密码 更改 root 帐户密码 使用快捷键 ctrl + alt + T 打开终端 输入 sudo passwd 输入两次新密码 3. VNC VNC 简介 是一种远程控制软件，一般用于远程解决计算机问题或软件调试 VNC Port 当机器人手臂和电脑连接到同一个 WiFi 时，机器人手臂的 IP 地址为端口 连接 VNC 有两种无线连接模式。第一种模式需要外接显示器才能对系统进行某些操作。具体步骤如下： 点击 \"Disconnect\"，断开默认的热点连接。 点击 \"Enable Wi-Fi \"，将显示当前可用的 WiFi 点击需要连接的 WiFi，输入密码 连接成功后，点击 \"Connection Information\" 查看机器人的 IP 地址 如示例所示，\"192.168.10.64\" 是机器人当前的 IP 地址 将电脑和机器人连接到同一个 WiFi 上，打开 VNC 查看器，输入 IP 地址（例如：输入 192.168.10.64），输入密码 Elephant，默认不指定用户名。下面是一个成功连接的示例： 第二种方法不需要连接显示器，直接将 Ubuntu 系统热点与 PC 机连接进行远程控制，但这种连接方式不具备上网冲浪的功能，只能远程控制机械臂系统。具体步骤如下： 连接热点ElephantRobotics_AP_XXXX，输入密码 Elephant 打开 VNC 查看器，输入 IP 地址 10.42.0.1 ，然后输入密码 Elephant，默认不指定用户名。下面是一个成功连接的示例： 如何提高连接流畅性 远程连接的流畅性取决于所连接 WiFi 的流畅性。建议连接稳定的 WiFi 进行远程控制 4. SSH SSH 简介 SSH 是一种网络协议，用于计算机之间的加密登录。如果用户使用 SSH 从本地计算机登录到另一台远程计算机，我们可以认为这次登录是安全的，即使中间被拦截，密码也不会泄露。 SSH 端口 默认端口号为 22 SSH 连接 按照 5.1.2 VNC 中的说明确认机器人的 IP 地址 单击 win + R 并输入 `cmd 输入后，单击 \"确定 \"打开外壳界面 输入 ssh er@IP address，然后按 Enter（IP 地址主要由机械臂显示，图中仅为示例）。 输入密码 Elephant 如上图所示，机械臂已通过 ssh 成功连接 如何提高连接流畅性 远程连接的流畅性取决于所连接 WiFi 的流畅性。建议连接稳定的 WiFi 进行远程控制。 5. 网络配置 默认 AP 使用情况 打开机器人电源，默认情况下，系统会连接到自带的热点，热点名称为ElephantRobotics_AP_XXXX，当前 IP 地址为10.42.0.1，该热点不具备网上冲浪功能，且传输速率和信息量有限，因此最终成像会有一定的失真和色差，通信传输也会有延迟，属于正常现象。 连接至无线局域网 点击 \"Disconnect\" 关闭默认热点 点击 \"Enable Wi-Fi \"，等待显示当前可用的 WiFi 单击要连接的 WiFi 并输入 WiFi 密码 连接成功后，点击 \"Connection Information\" 查看 IP 地址 如示例所示，\"192.168.10.64\" 是机器人当前的 IP 地址 有线网络连接 打开机器人电源，机器人默认连接到系统配置的热点： ElephantRobotics_AP_XXXX 单击 \"Disconnect\"，断开与默认热点的连接 将网线连接到机器人的网络端口 将网线连接到机器人的网络端口 如何设置默认 IP 地址 使用快捷键ctrl + alt + T打开终端，输入sudo vim /etc/netplan/01-network-manager-all.yaml，修改 01-network-manager-all.yaml 文件如下： 修改后，输入sudo netplan apply 使配置生效 如何自动分配 IP 地址 如果要将固定 IP 地址改为自动分配 IP 地址，请按如下步骤修改 /etc/netplan/01-network-manager-all.yaml 文件： 修改后，输入sudo netplan apply 使配置生效 6. 语言配置 如何更改语言 点击 语言支持，将所需语言拖到顶部，然后重新启动系统 如何下载语言点击Language Support，选择语言，点击下载，输入密码Elephant 7. 系统分辨率开关 点击屏幕右上角的图标，选择System Settings，进入控制面板 选择 Display 切换所选分辨率并单击 Apply 进行检查，然后单击 Keep this Configuration 保存配置 8. python Python 入门 内置安装Python3.8，无需自行安装 已安装的库： 包装 版本 pymycobot 3.1.5 pyserial 3.5 numpy 1.23.5 opencv-contrib-python 4.7.0.72 rospkg 1.4.0 rospkg-modules 1.4.0 尝试编程 如果你是 python 编程语言的新手，可以按照以下视频进行编程 您可以在以下输入字段中试用此代码： print (\"Hello World!\") 运行演示 可查看具体的案例代码 Python，只需复制案例中的代码并使用即可 ← 上一章 | 下一章 → "},"3-FunctionsAndApplications/5-BasicApplication/5.4-FirmwareUpdateInfo.html":{"url":"3-FunctionsAndApplications/5-BasicApplication/5.4-FirmwareUpdateInfo.html","title":"5.4 固件更新","keywords":"","body":" ← 上一章 | 下一章 → "},"3-FunctionsAndApplications/6-SoftwareDevelopment/":{"url":"3-FunctionsAndApplications/6-SoftwareDevelopment/","title":"6 软件开发指南","keywords":"","body":"Introduction "},"3-FunctionsAndApplications/7-ExamplesRobotsUsing/":{"url":"3-FunctionsAndApplications/7-ExamplesRobotsUsing/","title":"7 成功案例","keywords":"","body":"Introduction "},"3-FunctionsAndApplications/8-FilesDownload/":{"url":"3-FunctionsAndApplications/8-FilesDownload/","title":"8 配套资源","keywords":"","body":"Introduction "},"4-SupportAndService/9-AboutUs/":{"url":"4-SupportAndService/9-AboutUs/","title":"9 关于我们","keywords":"","body":"Introduction "},"4-SupportAndService/10-Accessories/":{"url":"4-SupportAndService/10-Accessories/","title":"10 周边配件","keywords":"","body":"Introduction "},"5-Acknowledgments/11-Acknowledgements.html":{"url":"5-Acknowledgments/11-Acknowledgements.html","title":"11 致谢","keywords":"","body":"Introduction "}}